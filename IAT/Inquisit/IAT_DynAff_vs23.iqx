**************************************************************************************************************
**************************************************************************************************************
	Implicit Attitude Test (IAT)
**************************************************************************************************************
**************************************************************************************************************
Last Modified:	09-23-2014 by k. Borchert (katjab@millisecond.com) for Millisecond Software

Copyright ©  09-23-2014 Millisecond Software

Adapted for the Dynamic Affect project by Lukas Snoek

***********************************************************************
Editable Parameters: 
these parameters can be changed easily by each experimenter
***********************************************************************
/showsummaryfeedback:				set parameter showsummaryfeedback = true to display summary feedback to participants at the end (default)
									set parameter showsummaryfeedback = false if no summary feedback should be presented to participants
<values>
/showsummaryfeedback = false
</values>


***********************************************************************
This sample IAT can be easily adapted to different target categories 
and attributes. To change the categories, you need only change the 
stimulus items and labels immediately below this line.

***********************************************************************

<item attributeAlabel>
/1 = "Positief"
</item>

<item attributeA>
/1 = "Aangenaam"
/2 = "Aantrekkelijk"
/3 = "Bevriend"
/4 = "Blijdschap"
/5 = "Enthousiast"
/6 = "Geslaagd"
/7 = "Optimistisch"
/8 = "Plezierig"
/9 = "Trots"
/10 = "Vertrouwd"
/11 = "Grappig"
/12 = "Vrolijk"
</item>

<item attributeBlabel>
/1 = "Negatief"
</item>

<item attributeB>
/1 = "Afgrijselijk"
/2 = "Afschuwelijk"
/3 = "Angstwekkend"
/4 = "Bedorven"
/5 = "Dreigend"
/6 = "Gestoord"
/7 = "Gevangenis"
/8 = "Gewelddadig"
/9 = "Lusteloos"
/10 = "Misdadiger"
/11 = "Vernedering"
/12 = "Vijand"
</item>

<item targetAlabel>
/1 = "Janos"
</item>

<item targetA>
/1 = "char2.jpg"
/2 = "char2.jpg"
/3 = "char2.jpg"
/4 = "char2.jpg"
/5 = "char2.jpg"
/6 = "char2.jpg"
/7 = "char2.jpg"
/8 = "char2.jpg"
/9 = "char2.jpg"
/10 = "char2.jpg"
/11 = "char2.jpg"
/12 = "char2.jpg"
</item>

<item targetBlabel>
/1 = "Matthias"
</item>

<item targetB>
/1 = "char3.jpg"
/2 = "char3.jpg"
/3 = "char3.jpg"
/4 = "char3.jpg"
/5 = "char3.jpg"
/6 = "char3.jpg"
/7 = "char3.jpg"
/8 = "char3.jpg"
/9 = "char3.jpg"
/10 = "char3.jpg"
/11 = "char3.jpg"
/12 = "char3.jpg"

</item>

***********************************************************************
To change the categories, you need only change the stimulus items and 
labels immediately above this line. All commands below relate to the 
IAT procedure, and need only be changed if you wish to modify the 
generic IAT procedure.
***********************************************************************

**************************************************************************************************************
**************************************************************************************************************
    Defaults
**************************************************************************************************************
**************************************************************************************************************
This script requires Inquisit 4.0.0.0 or higher

<defaults>
/ fontstyle = ("Arial", 3.5%)
/ screencolor = (0,0,0)
/ txbgcolor = (0,0,0)
/ txcolor = (255, 255, 255)
/ minimumversion = "4.0.0.0"
/ canvasaspectratio = (4, 3)
</defaults>

***********************************************************************
Scoring
***********************************************************************

*********************
automatically updated
*********************
/completed:					0 = script was not completed; 1 = script was completed (all conditions run)

/ sum1a:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the first compatible block 1A
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response)
/ sum2a:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the first incompatible block 2A
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response) 
/ sum1b:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the second compatible block 1B
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response)
/ sum2b:					tracks the sum of the latencies to correct responses (latencies <= 10000ms) for the second incompatible block 2B
								Note: by design, all final trial responses are correct (regardless of accuracy of initial response) 
/ n1a:						counts the number of trials in first compatible block 1A (except first one)
/ n2a:						counts the number of trials in first incompatible block 2A (except first one)
/ n1b:						counts the number of trials in second compatible block 1B
/ n2b:						counts the number of trials in second incompatible block 2B
/ ss1a:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the first compatible block 
/ ss2a						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the first incompatible block
/ ss1b:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the second compatible block 
/ ss2b:						tracks the sum of the squared latencies to correct responses (latencies <= 10000ms) in the second incompatible block 
/ magnitude:				stores the magnitude of the implicit preference: "little to no", "a slight", "a moderate", "a strong"
/ n_correct:				counts all initial correct responses of all trials that count towards D score


<values>
/ completed = 0
/ sum1a = 0
/ sum2a = 0
/ sum1b = 0
/ sum2b = 0
/ n1a = 0
/ n2a = 0
/ n1b = 0
/ n2b = 0
/ ss1a = 0
/ ss2a = 0
/ ss1b = 0
/ ss2b = 0
/ magnitude = "unknown"
/ n_correct = 0
</values>

* 1 is compatible, 2 is incompatible
* a is first block, b is second block

/ m1a:					mean latencies of correct responses in first compatible block
/ m2a:					mean latencies of correct responses in first incompatible block
/ m1b:					mean latencies of correct responses in second compatible block
/ m2b:					mean latencies of correct responses in second incompatible block
/ sd1a:					standard deviation of latencies of correct responses in first compatible block
/ sd2a					standard deviation of latencies of correct responses in first incompatible block
/ sd1b:					standard deviation of latencies of correct responses in second compatible block
/ sd2b:					standard deviation of latencies of correct responses in second incompatible block
/ sda					standarddeviation of latencies in first block
/ sdb 					standarddeviation of latencies in second block
/ da:					D-score for first blocks		
/ db:					D-score for second blocks
/ d:					overall D-score
/ preferred:			stores the preferred target category
/ notpreferred :		stores the non preferred target category
/ percentcorrect:       calculates the overall percent correct score of initial responses of test trials of D-score qualifying latencies

<expressions>
/ m1a = values.sum1a / values.n1a
/ m2a = values.sum2a / values.n2a
/ m1b = values.sum1b / values.n1b
/ m2b = values.sum2b / values.n2b
/ sd1a = sqrt((values.ss1a - (values.n1a * (expressions.m1a * expressions.m1a))) / (values.n1a - 1))
/ sd2a = sqrt((values.ss2a - (values.n2a * (expressions.m2a * expressions.m2a))) / (values.n2a - 1))
/ sd1b = sqrt((values.ss1b - (values.n1b * (expressions.m1b * expressions.m1b))) / (values.n1b - 1))
/ sd2b = sqrt((values.ss2b - (values.n2b * (expressions.m2b * expressions.m2b))) / (values.n2b - 1))
/ sda = sqrt((((values.n1a - 1) * (expressions.sd1a * expressions.sd1a) + (values.n2a - 1) * (expressions.sd2a * expressions.sd2a)) + ((values.n1a + values.n2a) * ((expressions.m1a - expressions.m2a) * (expressions.m1a - expressions.m2a)) / 4) ) / (values.n1a + values.n2a - 1) )
/ sdb = sqrt((((values.n1b - 1) * (expressions.sd1b * expressions.sd1b) + (values.n2b - 1) * (expressions.sd2b * expressions.sd2b)) + ((values.n1b + values.n2b) * ((expressions.m1b - expressions.m2b) * (expressions.m1b - expressions.m2b)) / 4) ) / (values.n1b + values.n2b - 1) )
/ da = (m2a - m1a) / expressions.sda
/ db = (m2b - m1b) / expressions.sdb
/ d = (expressions.da + expressions.db) / 2
/ preferred = "unknown"
/ notpreferred = "unknown"
/ percentcorrect = (values.n_correct/ (values.n1a + values.n1b + values.n2a + values.n2b)) * 100
</expressions>


***********************************************************************
Data Columns
***********************************************************************

*************
raw data
*************
date/time/group/subject:			built in variables that track date and time when script was run with the assigned
									subject- and group number

									Note: group1/group2 counterbalance the order in which the pairings are run

blockcode:							the name of the current trial
blocknum:							the number of the current trial
trialcode:							the name of the current trial
trialnum:							the number of the current trial
response:							the final trial response (scancodes of the keys pressed)
										Note: script saves the final and -by design- correct response
correct:							the accuracy of the initial response
										0 = initial response was incorrect and needed to be corrected
										1 = initial response is correct
latency:							the latency of the final (correct) response
stimulusnumber:						the number of the current stimulus
stimulusitem:						the currently presented item
expressions.da:						d-score of the first blocks
expressions.db:						d-score of the second blocks
expressions.d:						overall d-score
/ percentcorrect:      				 calculates the overall percent correct score of initial responses of test trials of D-score qualifying latencies

<data>
/file = "pictureiat_rawdata.iqdat"
/ columns = [date, time, group, subject, blockcode, blocknum, trialcode, trialnum, response, correct, latency, 
					stimulusnumber, stimulusitem, expressions.da, expressions.db, expressions.d, expressions.percentcorrect ]
/separatefiles = true
</data>

*************
summary data
*************
script.startdate:					date script was run
script.starttime:					time script was started
script.subjectid:					subject id number
script.groupid:						group id number
script.elapsedtime:					time it took to run script (in ms)
/completed:							0 = script was not completed; 1 = script was completed (all conditions run)

expressions.da:						d-score of the first blocks
expressions.db:						d-score of the second blocks
expressions.d:						overall d-score
/ percentcorrect:      				 calculates the overall percent correct score of initial responses of test trials of D-score qualifying latencies

<summarydata >
/file = "pictureiat_summary.iqdat"
/ columns = [script.startdate, script.starttime, script.subjectid, script.groupid, script.elapsedtime, values.completed,
expressions.da, expressions.db, expressions.d, expressions.percentcorrect]
</summarydata>


***********************************************************************
Performance summary
***********************************************************************

<trial summary>
/ stimulustimes = [0=summary]
/ validresponse = (" ")
/ recorddata = false
/ ontrialbegin = [values.magnitude = "little to no"]
/ ontrialbegin = [if( abs(expressions.d) > 0.15 ) values.magnitude = "a slight"]
/ ontrialbegin = [if( abs(expressions.d) > 0.35 ) values.magnitude = "a moderate"]
/ ontrialbegin = [if( abs(expressions.d) >= 0.65 ) values.magnitude = "a strong"]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.preferred = item.targetALabel.1]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.preferred = item.targetBLabel.1]
/ ontrialbegin = [if(expressions.d < 0.0) expressions.notpreferred= item.targetALabel.1]
/ ontrialbegin = [if(expressions.d >= 0.0) expressions.notpreferred= item.targetBLabel.1]
</trial>

<text summary>
/ items = ("Your IAT score (D) was <% expressions.d %>, which suggests <% values.magnitude %> automatic preference for <% expressions.preferred %> compared to <% expressions.notpreferred %>.~n~n~nPress the spacebar to complete this session.") 
/ size = (60%, 60%)
/ hjustify = left
 </text>

***********************************************************************
Task instruction stimuli
***********************************************************************

<trial instructions>
/ stimulustimes = [1=instructions, spacebar]
/ correctresponse = (" ")
/ errormessage = false
/ recorddata = false
</trial>

<text instructions>
/ items = instructions
/ hjustify = left
/ size = (90%, 60%)
/ position = (50%, 85%)
/ valign = bottom
/ select = sequence
/ resetinterval = 20
</text>

<item instructions>
/ 1 = "Zet je middel- of wijsvingers op de E en I toetsen van het toetsenbord. Je krijg afbeeldingen en woorden uit verschillende categorieën te zien krijgen. Deze categorieën staan telkens links- en rechtsboven in het scherm. De afbeeldingen/woorden zullen een-voor-een op het midden van het scherm komen. Wanneer een item behoort tot de categorie aan de linkerkant, druk dan de E toets; als een item hoort bij de rechter categorie, druk dan op de I toets. De afbeeldingen/woorden horen altijd maar tot 1 categorie. Als je een fout maakt, zal er een X verschijnen - fix dan de fout door op de andere knop te drukken.

We houden je reactiesnelheid tijdens dit taakje in de gaten. BESLIS ZO SNEL MOGELIJK terwijl je probeert ZO WEINIG mogelijk fouten te maken. Als je te te langzaam of teveel fouten maakt, is je data oninterpretabel. Deze taak duurt ongeveer 5 minuten. om af te maken"

/ 2 = "Zoals je aan de bovenkant van het scherm ziet, zijn de categorieën veranderd; de items om te categoriseren zijn ook veranderd. Maar: de regels zijn wel gewoon hetzelfde.

Wanneer een item hoort tot de linker categorie, druk op de E toets; wanneer het item hoort bij de rechter categorie, druk op de I toets. De items horen altijd maar tot 1 categorie. BESLIS ZO SNEL MOGELIJK."

/ 3 = "Zoals je nu kan zien, komen de vier categorieën die je eerder apart hebt gezien nu samen voor. Onthoud: elk item hoort maar tot een categorie. Als, bijvoorbeeld, de categorieën <%item.targetalabel.item(1)%> en <%item.attributealabel.item(1)%> voorkomen aan aparte kanten bovenaan het scherm, dan zullen afbeeldingen en woorden die <%item.targetalabel.item(1)%> representeren, gecategoriseerd moeten als <%item.targetalabel.item(1)%>, en NIET ALS <%item.attributealabel.item(1)%>.

De groene en witte labels en items kunnen helpen om de juiste categorie te kiezen. Gebruik de E en I toetsen om de items te categoriseren in de vier groepen aan de linker- en rechterkant. Als je een fout maakt, druk op de andere toets om je fout te verbeteren."

/ 4 = "Sorteer dezelfde vier categorieën opnieuw. Onthoud: beslis zo snel mogelijk terwijl je min mogelijk fouten probeert te maken.

De groene en witte labels en items kunnen helpen om de juiste categorie te kiezen. Gebruik de E en I toetsen om de items te categoriseren in de vier groepen aan de linker- en rechterkant. Als je een fout maakt, druk op de andere toets om je fout te verbeteren."

/ 5 = "Zoals je kan zien, zijn er maar twee categorieën, die van plek zijn gewisseled. Het concept dat eerder LINKS stond, staat nu RECHTS (en andersom). Je kan dit even oefenen.

Gebruik de E en I toetsen om de items links en rechts te categoriseren."

/ 6 = "Zoals je kan zien, zijn de vier categorieën in een nieuwe samenstelling te zien. Onthoud: elk item hoort maar tot één groep!

De groene en witte labels en items kunnen helpen om de juiste categorie te kiezen. Gebruik de E en I toetsen om de items te categoriseren in de vier groepen aan de linker- en rechterkant. Als je een fout maakt, druk op de andere toets om je fout te verbeteren."

/ 7 = "Sorteer de vier categorieën opnieuw. Onthoud: beslis zo snel mogelijk terwijl je min mogelijk fouten probeert te maken.

De groene en witte labels en items kunnen helpen om de juiste categorie te kiezen. Gebruik de E en I toetsen om de items te categoriseren in de vier groepen aan de linker- en rechterkant. Als je een fout maakt, druk op de andere toets om je fout te verbeteren."

</item>

<text spacebar>
/ items = ("Druk op de SPATIEBALK om te beginnen.")
/ position = (50%, 95%)
/ valign = bottom
</text>

<text attributeA>
/ items = attributeA
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<text attributeB>
/ items = attributeB
/ fontstyle = ("Arial", 5%)
/ txcolor = (0, 255, 0)
</text>

<picture targetB>
/ items = targetB
/ size = (50%, 50%)
</picture>

<picture targetA>
/ items = targetA
/ size = (50%, 50%)
</picture>

<text error>
/ position = (50%, 75%)
/ items = ("X")
/ color = (255, 0, 0)
/ fontstyle = ("Arial", 10%, true)
</text>

<text attributeAleft>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBright>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeAleftmixed>
/ items = attributeAlabel
/ valign = top
/ halign = left
/ position = (5%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text attributeBrightmixed>
/ items = attributeBlabel
/ valign = top
/ halign = right
/ position = (95%, 19%)
/ txcolor = (0, 255, 0)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBleft>
/ items = targetBlabel
/ valign = top
/ halign = left	
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetBright>
/ items = targetBlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAleft>
/ items = targetAlabel
/ valign = top
/ halign = left
/ position = (5%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text targetAright>
/ items = targetAlabel
/ valign = top
/ halign = right
/ position = (95%, 5%)
/ fontstyle = ("Arial", 5%)
</text>

<text orleft>
/ items = ("of")
/ valign = top
/ halign = left
/ position = (5%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

<text orright>
/ items = ("of")
/ valign = top
/ halign = right
/ position = (95%, 12%)
/ fontstyle = ("Arial", 5%)
</text>

***********************************************************************
Trials
***********************************************************************

<trial attributeA>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = attributeA]
/ posttrialpause = 250
</trial>

<trial attributeB>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = attributeB]
/ posttrialpause = 250
</trial>


<trial targetBleft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetBright>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = targetB]
/ posttrialpause = 250
</trial>

<trial targetAleft>
/ validresponse = ("E", "I")
/ correctresponse = ("E")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

<trial targetAright>
/ validresponse = ("E", "I")
/ correctresponse = ("I")
/ stimulusframes = [1 = targetA]
/ posttrialpause = 250
</trial>

***********************************************************************
Blocks
***********************************************************************

<block attributepractice>
/ bgstim = (attributeAleft, attributeBright)
/ trials = [1=instructions;2-21 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepractice>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-21 = random(targetAleft, targetBright)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepractice>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-21 = random(targetAright, targetBleft)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetcompatiblepracticeswitch>
/ bgstim = (targetAleft, targetBright)
/ trials = [1=instructions;2-41 = random(targetAleft, targetBright)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>

<block targetincompatiblepracticeswitch>
/ bgstim = (targetAright, targetBleft)
/ trials = [1=instructions;2-41 = random(targetAright, targetBleft)]
/ errormessage = true(error,200)
/ responsemode = correct
</block>


<block compatibletest1>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21= random(targetAleft, targetBright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.sum1a =  values.sum1a + block.compatibletest1.latency]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.n1a +=  1]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.ss1a =  values.ss1a + (block.compatibletest1.latency * block.compatibletest1.latency)]
/ ontrialend = [if(block.compatibletest1.latency  <= 10000 && block.compatibletest1.currenttrialnumber != 1 ) values.n_correct += block.compatibletest1.correct]
</block>

<block compatibletest2>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetAleft, targetBright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.sum1b =  values.sum1b + block.compatibletest2.latency]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.n1b += 1]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.ss1b =  values.ss1b + (block.compatibletest2.latency * block.compatibletest2.latency)]
/ ontrialend = [if(block.compatibletest2.latency  <= 10000) values.n_correct += block.compatibletest2.correct]
</block>

<block incompatibletest1>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions;
  3,5,7,9,11,13,15,17,19,21 = random(targetBleft, targetAright);
  2,4,6,8,10,12,14,16,18,20 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1) values.sum2a =  values.sum2a + block.incompatibletest1.latency]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.n2a +=  1]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.ss2a =  values.ss2a + (block.incompatibletest1.latency * block.incompatibletest1.latency)]
/ ontrialend = [if(block.incompatibletest1.latency  <= 10000 && block.incompatibletest1.currenttrialnumber != 1 ) values.n_correct += block.incompatibletest1.correct]
</block>

<block incompatibletest2>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [
  2,4,6,8,10,12,14,16,18,20,22,24,26,28,30,32,34,36,38,40 = random(targetBleft, targetAright);
  1,3,5,7,9,11,13,15,17,19,21,23,25,27,29,31,33,35,37,39 = random(attributeA, attributeB)]
/ errormessage = true(error,200)
/ responsemode = correct
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.sum2b =  values.sum2b + block.incompatibletest2.latency]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.n2b +=  1]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.ss2b =  values.ss2b + (block.incompatibletest2.latency * block.incompatibletest2.latency)]
/ ontrialend = [if(block.incompatibletest2.latency  <= 10000) values.n_correct += block.incompatibletest2.correct]
</block>


<block compatibletestinstructions>
/ bgstim = (targetAleft, orleft, attributeAleftmixed, targetBright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block incompatibletestinstructions>
/ bgstim = (targetBleft, orleft, attributeAleftmixed, targetAright, orright, attributeBrightmixed)
/ trials = [1=instructions]
/ recorddata = false
</block>

<block summary>
/skip = [values.showsummaryfeedback == false]
/ trials = [1=summary]
/ recorddata = false
</block>

***********************************************************************
Experiment
***********************************************************************
Assignments to groups by groupnumber

<expt>
/subjects = (1 of 2)
/groupassignment = groupnumber
/ blocks = [1=targetcompatiblepractice; 2=attributepractice; 3=compatibletest1; 4=compatibletestinstructions;
				5=compatibletest2; 6=targetincompatiblepractice; 7=incompatibletest1; 8=incompatibletestinstructions;
				9=incompatibletest2; 10=summary]
/onexptend = [values.completed = 1]
</expt>

<expt>
/subjects = (2 of 2)
/groupassignment = groupnumber
/ blocks = [1=targetincompatiblepractice; 2=attributepractice; 3=incompatibletest1; 4=incompatibletestinstructions; 
				5=incompatibletest2; 6=targetcompatiblepractice; 7=compatibletest1; 8=compatibletestinstructions; 
				9=compatibletest2; 10=summary]
/onexptend = [values.completed = 1]
</expt>



***********************************************************************
Test Monkey
***********************************************************************
<monkey>
/ latencydistribution = normal(500, 100)
/ percentcorrect = 90
</monkey>

